C51 COMPILER V9.60.7.0   LCD1602                                                           04/04/2025 20:36:08 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\Keil5\keil5C51\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\LCD1602.lst) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <INTRINS.H>    //_nop_()
   3          
   4          sbit LCD_RS = P2^6;
   5          sbit LCD_RW = P2^5;
   6          sbit LCD_E = P2^7;
   7          #define LCD_DataPort P0
   8          
   9          void Delay1ms()         //@11.0592MHz
  10          {
  11   1              unsigned char i, j;
  12   1      
  13   1              _nop_();
  14   1              i = 2;
  15   1              j = 199;
  16   1              do
  17   1              {
  18   2                      while (--j);
  19   2              } while (--i);
  20   1      }
  21          
  22          void LCD_WriteCommand(unsigned char Command)
  23          {
  24   1              LCD_RS = 0;
  25   1              LCD_RW = 0;
  26   1              LCD_DataPort = Command;
  27   1              LCD_E = 1;
  28   1              Delay1ms();             //执行指令需要时间
  29   1              LCD_E = 0;
  30   1              Delay1ms();
  31   1      }
  32          
  33          void LCD_WriteData(unsigned char Data)
  34          {
  35   1              LCD_RS = 1;
  36   1              LCD_RW = 0;
  37   1              LCD_DataPort = Data;
  38   1              LCD_E = 1;
  39   1              Delay1ms();             //执行指令需要时间
  40   1              LCD_E = 0;
  41   1              Delay1ms();
  42   1      }
  43          
  44          void LCD_Init()
  45          {
  46   1              //设置模式
  47   1              LCD_WriteCommand(0x38); //八位数据接口，两行显示，5*7点阵
  48   1              LCD_WriteCommand(0x0C); //显示开，光标关，闪烁关
  49   1              LCD_WriteCommand(0x06); //数据读写操作后，光标自动加一，画面不变
  50   1              LCD_WriteCommand(0x01); //清屏
  51   1      }
  52          
  53          void LCD_LC2Location(unsigned char Line,unsigned char Column)
  54          {
C51 COMPILER V9.60.7.0   LCD1602                                                           04/04/2025 20:36:08 PAGE 2   

  55   1              //行列到地址的转换
  56   1              if(Line == 1)
  57   1              {
  58   2                      LCD_WriteCommand(0x80|(Column-1));
  59   2              }
  60   1              else
  61   1              {
  62   2                      LCD_WriteCommand(0x80|(Column-1)+0x40);
  63   2              }
  64   1      }
  65          
  66          void LCD_ShowChar(unsigned char Line,unsigned char Column,unsigned char Char)
  67          {
  68   1              LCD_LC2Location(Line,Column);
  69   1              LCD_WriteData(Char);
  70   1      }
  71          
  72          void LCD_ShowString(unsigned char Line,unsigned char Column,unsigned char String[])
  73          {
  74   1              unsigned char i = 0;
  75   1              LCD_LC2Location(Line,Column);
  76   1              for(i = 0;String[i] != '\0';i++)
  77   1              {
  78   2                      LCD_WriteData(String[i]);
  79   2              }
  80   1      }
  81          
  82          int LCD_Pow(int X,int Y)
  83          {
  84   1              unsigned char i = 0;
  85   1              int Result = 1;
  86   1              for(i = 0;i < Y;i++)
  87   1              {
  88   2                      Result *= X;
  89   2              }
  90   1              return Result;
  91   1      }
  92          
  93          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
  94          {
  95   1              unsigned char i = 0;
  96   1              LCD_LC2Location(Line,Column);
  97   1              for(i=Length;i>0;i--)
  98   1              {
  99   2                      LCD_WriteData(Number/LCD_Pow(10,i-1)%10 + '0');
 100   2              }
 101   1      }
 102          
 103          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 104          {
 105   1              unsigned char i = 0;
 106   1              unsigned int Number1 = 0;
 107   1              LCD_LC2Location(Line,Column);
 108   1              if(Number>=0)
 109   1              {
 110   2                      LCD_WriteData('+');
 111   2                      Number1 = Number;
 112   2              }
 113   1              else
 114   1              {
 115   2                      LCD_WriteData('-');
 116   2                      Number1 = -Number;
C51 COMPILER V9.60.7.0   LCD1602                                                           04/04/2025 20:36:08 PAGE 3   

 117   2              }
 118   1              for(i=Length;i>0;i--)
 119   1              {
 120   2                      LCD_WriteData(Number1/LCD_Pow(10,i-1)%10 + '0');
 121   2              }
 122   1      }
 123          
 124          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 125          {
 126   1              unsigned char i = 0;
 127   1              unsigned char SingleNumber = 0;
 128   1              LCD_LC2Location(Line,Column);
 129   1              for(i=Length;i>0;i--)
 130   1              {
 131   2                      SingleNumber = Number/LCD_Pow(16,i-1)%16;
 132   2                      if(SingleNumber<10)
 133   2                      {
 134   3                              LCD_WriteData(SingleNumber + '0');
 135   3                      }
 136   2                      else
 137   2                      {
 138   3                              LCD_WriteData(SingleNumber-10 + 'A');
 139   3                      }
 140   2              }
 141   1      }
 142          
 143          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 144          {
 145   1              unsigned char i = 0;
 146   1              LCD_LC2Location(Line,Column);
 147   1              for(i=Length;i>0;i--)
 148   1              {
 149   2                      LCD_WriteData(Number/LCD_Pow(2,i-1)%2 + '0');
 150   2              }
 151   1      }
 152          
 153          
 154          
 155          
 156          
 157          
 158          
 159          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    409    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
